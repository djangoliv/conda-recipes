commit 1e8c3164beffdf97a6fa81b552dfb0b62e8b7a8b
Author: Ben Webb <ben@salilab.org>
Date:   Mon Aug 17 21:48:20 2015 -0700

    Simplify generation of module info files.
    
    This should also do the right thing if any string contains
    escape characters (a common occurrence for Windows-style paths).

diff --git tools/build/setup_module.py tools/build/setup_module.py
index 72caf49..a44e620 100755
--- tools/build/setup_module.py
+++ tools/build/setup_module.py
@@ -222,30 +222,12 @@ def write_ok(
         swig_includes, swig_wrapper_includes):
     print("yes")
     config = ["ok=True"]
-    if len(modules) > 0:
-        config.append("modules = \"" + ":".join(modules) + "\"")
-    if len(unfound_modules) > 0:
-        config.append(
-            "unfound_modules = \"" +
-            ":".join(
-                unfound_modules) +
-            "\"")
-    if len(dependencies) > 0:
-        config.append("dependencies = \"" + ":".join(dependencies) + "\"")
-    if len(unfound_dependencies) > 0:
-        config.append(
-            "unfound_dependencies = \"" +
-            ":".join(
-                unfound_dependencies) +
-            "\"")
-    if len(swig_includes) > 0:
-        config.append("swig_includes = \"" + ":".join(swig_includes) + "\"")
-    if len(swig_wrapper_includes) > 0:
-        config.append(
-            "swig_wrapper_includes = \"" +
-            ":".join(
-                swig_wrapper_includes) +
-            "\"")
+    for varname in ("modules", "unfound_modules", "dependencies",
+                    "unfound_dependencies", "swig_includes",
+                    "swig_wrapper_includes"):
+        var = eval(varname)
+        if len(var) > 0:
+            config.append("%s = %s" % (varname, repr(":".join(var))))
     tools.rewrite(
         os.path.join("data",
                      "build_info",
@@ -346,7 +346,7 @@ def find_cmdline_links(mod, docdir, cmdline_tools):
     for g in [os.path.join(docdir, "README.md")] \
              + glob.glob(os.path.join(docdir, "doc", "*.dox")) \
              + glob.glob(os.path.join(docdir, "doc", "*.md")):
-        for line in open(g):
+        for line in tools.open_utf8(g):
             if todo and len(line.rstrip('\r\n ')) > 0 \
                and line[0] not in " =-\\":
                 (k, v) = todo.popitem()
@@ -413,14 +413,8 @@ def make_overview(options, cmdline_tools):
     pickle.dump(cmdline_links,
                 open(os.path.join("data", "build_info",
                                   "IMP_%s.pck" % options.name), 'wb'), -1)
-    rmd = open(
-        os.path.join(
-            options.source,
-            "modules",
-            options.name,
-            "README.md"),
-        "r").read(
-    )
+    rmd = tools.open_utf8(os.path.join(options.source, "modules", options.name,
+                                       "README.md"), "r").read()
     tools.rewrite(
         os.path.join("doxygen", "generated", "IMP_%s.dox" % options.name),
                   """/** \\namespace %s
