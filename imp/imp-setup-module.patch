commit 1e8c3164beffdf97a6fa81b552dfb0b62e8b7a8b
Author: Ben Webb <ben@salilab.org>
Date:   Mon Aug 17 21:48:20 2015 -0700

    Simplify generation of module info files.
    
    This should also do the right thing if any string contains
    escape characters (a common occurrence for Windows-style paths).

diff --git tools/build/setup_module.py tools/build/setup_module.py
index 72caf49..a44e620 100755
--- tools/build/setup_module.py
+++ tools/build/setup_module.py
@@ -222,30 +222,12 @@ def write_ok(
         swig_includes, swig_wrapper_includes):
     print("yes")
     config = ["ok=True"]
-    if len(modules) > 0:
-        config.append("modules = \"" + ":".join(modules) + "\"")
-    if len(unfound_modules) > 0:
-        config.append(
-            "unfound_modules = \"" +
-            ":".join(
-                unfound_modules) +
-            "\"")
-    if len(dependencies) > 0:
-        config.append("dependencies = \"" + ":".join(dependencies) + "\"")
-    if len(unfound_dependencies) > 0:
-        config.append(
-            "unfound_dependencies = \"" +
-            ":".join(
-                unfound_dependencies) +
-            "\"")
-    if len(swig_includes) > 0:
-        config.append("swig_includes = \"" + ":".join(swig_includes) + "\"")
-    if len(swig_wrapper_includes) > 0:
-        config.append(
-            "swig_wrapper_includes = \"" +
-            ":".join(
-                swig_wrapper_includes) +
-            "\"")
+    for varname in ("modules", "unfound_modules", "dependencies",
+                    "unfound_dependencies", "swig_includes",
+                    "swig_wrapper_includes"):
+        var = eval(varname)
+        if len(var) > 0:
+            config.append("%s = %s" % (varname, repr(":".join(var))))
     tools.rewrite(
         os.path.join("data",
                      "build_info",
